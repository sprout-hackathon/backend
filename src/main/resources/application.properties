server.port=8081

spring.application.name=Sprout

# MySQL ?????? ?? ??
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PW}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA ??
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

jwt.access_secret=${ACCESS_SECRET}
jwt.refresh_secret=${REFRESH_SECRET}

# Access Token: 1 hour
jwt.access_token_expiration=36000000
# Refresh Token: 2 weeks
jwt.refresh_token_expiration=1209600000

cors.origin.development=${DEV_URL}
cors.origin.production=${PROD_URL}

ai.base.url=${AI_BASE_URL:http://3.107.17.104:8000}

# 서버의 기본 문자 인코딩을 UTF-8로 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true

cloud.aws.s3.bucket=${S3_BUCKET}
cloud.aws.region.static=${S3_REGION}
cloud.aws.region.auto=false
cloud.aws.stack.auto=false
cloud.aws.credentials.access-key=${S3_ACCESS_KEY}
cloud.aws.credentials.secret-key=${S3_SECRET_KEY}

server.ssl.enabled=true
server.ssl.key-store-password=unicare!
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-type=PKCS12
server.ssl.protocol=TLS
server.ssl.ciphers=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHERSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384
server.ssl.enabled-protocols=TLSv1.2

openai.api-key=${OPENAI_API_KEY}
openai.model=gpt-4o
